<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Styles.Resources>


        <ResourceDictionary>

			<SolidColorBrush x:Key="CaptionButtonForeground" Color="Black" />
			<SolidColorBrush x:Key="CaptionButtonBackground" Color="Gray" />
			<SolidColorBrush x:Key="CaptionButtonBorderBrush" Color="#C0C0C0" />
						
			<ResourceDictionary.MergedDictionaries>
				
				<ResourceDictionary>
					<ControlTheme x:Key="{x:Type TitleBar}" TargetType="TitleBar">
						<Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
						<Setter Property="VerticalAlignment" Value="Top" />
						<Setter Property="HorizontalAlignment" Value="Stretch" />
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="Template">
							<ControlTemplate>
								<Panel HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
									   VerticalAlignment="Stretch">
									<Panel x:Name="PART_MouseTracker"
										   Height="1"
										   VerticalAlignment="Top" />
									<Panel x:Name="PART_Container">
										<Border x:Name="PART_Background"
												Background="{TemplateBinding Background}"
												IsHitTestVisible="False"
												Win32Properties.NonClientHitTestResult="Caption" />
										<CaptionButtons x:Name="PART_CaptionButtons"
														VerticalAlignment="Top"
														HorizontalAlignment="Right"
														Foreground="{TemplateBinding Foreground}"
														Win32Properties.NonClientHitTestResult="Client" />
									</Panel>
								</Panel>
							</ControlTemplate>
						</Setter>

						<Style Selector="^:fullscreen">
							<Setter Property="Background" Value="Transparent" />
							<!--
							<Setter Property="Background" Value="{DynamicResource SystemAccentColor}" />
							-->
						</Style>

						<Style Selector="^:fullscreen /template/ Border#PART_Background">
							<Setter Property="IsHitTestVisible" Value="True" />
						</Style>

						<Style Selector="^:fullscreen /template/ Panel#PART_MouseTracker">
							<Setter Property="Background" Value="Transparent" />
						</Style>

						<Style Selector="^:fullscreen /template/ Panel#PART_Container">
							<Setter Property="RenderTransform" Value="translateY(-36px)" />
							<!-- 
							<Setter Property="RenderTransform" Value="translateY(-30px)" />
							-->
							<Setter Property="Transitions">
								<Transitions>
									<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.25" />
								</Transitions>
							</Setter>
						</Style>

						<Style Selector="^:fullscreen:pointerover /template/ Panel#PART_Container">
							<Setter Property="RenderTransform" Value="none" />
						</Style>
					</ControlTheme>
				</ResourceDictionary>

				<ResourceDictionary>

					<x:Double x:Key="CaptionButtonWidth">45</x:Double>
					<x:Double x:Key="CaptionButtonHeight">30</x:Double>

					<Design.PreviewWith>
						<Border Padding="20">
							<StackPanel Spacing="20">
								<ThemeVariantScope RequestedThemeVariant="Dark">
									<Border Background="Black">
										<CaptionButtons Height="30"/>
									</Border>
								</ThemeVariantScope>
								<ThemeVariantScope RequestedThemeVariant="Light">
									<CaptionButtons Height="30"/>
								</ThemeVariantScope>
							</StackPanel>
						</Border>
					</Design.PreviewWith>

					<ControlTheme x:Key="FluentCaptionButton" TargetType="Button">
						<Setter Property="Background" Value="{DynamicResource CaptionButtonBackground}" />
						<!-- Reusing BorderBrush to define pressed background color, as it's not used otherwise -->
						<Setter Property="BorderBrush" Value="{DynamicResource CaptionButtonBorderBrush}" />
						<Setter Property="Foreground" Value="{DynamicResource CaptionButtonForeground}"/>
						<Setter Property="Width" Value="{DynamicResource CaptionButtonWidth}"/>
						<Setter Property="Height" Value="{DynamicResource CaptionButtonHeight}"/>
						<Setter Property="VerticalAlignment" Value="Stretch"/>
						<!-- Focusable=False added -->
						<Setter Property="Focusable" Value="False"/>
						
						<Setter Property="Template">
							<ControlTemplate>
								<ContentPresenter Name="PART_ContentPresenter"
												  Background="Transparent"
												  Content="{TemplateBinding Content}"/>
							</ControlTemplate>
						</Setter>

						<Style Selector="^:pointerover /template/ ContentPresenter">
							<Setter Property="Background" Value="{TemplateBinding Background}" />
						</Style>

						<Style Selector="^:pressed /template/ ContentPresenter">
							<Setter Property="Background" Value="{TemplateBinding BorderBrush}" />
						</Style>
						
					</ControlTheme>

					<ControlTheme x:Key="{x:Type CaptionButtons}" TargetType="CaptionButtons">
						<Setter Property="MaxHeight" Value="30" />
						<Setter Property="Template">
							<ControlTemplate>
								<StackPanel Spacing="2" VerticalAlignment="Stretch" TextElement.FontSize="10" Orientation="Horizontal">
									<Button x:Name="PART_FullScreenButton"
											Theme="{StaticResource FluentCaptionButton}"
											IsVisible="False">
										<Viewbox Width="11" Margin="2">
											<Path Name="FullScreenButtonPath"
												  Stretch="UniformToFill"
												  Fill="{TemplateBinding Foreground}"
												  Data="M2048 2048v-819h-205v469l-1493 -1493h469v-205h-819v819h205v-469l1493 1493h-469v205h819z" />
										</Viewbox>
									</Button>
									<Button x:Name="PART_MinimizeButton"
											Theme="{StaticResource FluentCaptionButton}"
											AutomationProperties.Name="Minimize"
											Win32Properties.NonClientHitTestResult="MinButton">
										<Viewbox Width="11" Margin="2">
											<Path Stretch="UniformToFill"
												  Fill="{TemplateBinding Foreground}"
												  Data="M2048 1229v-205h-2048v205h2048z" />
										</Viewbox>
									</Button>
									<Button x:Name="PART_RestoreButton"
											Theme="{StaticResource FluentCaptionButton}"
											AutomationProperties.Name="Maximize"
											Win32Properties.NonClientHitTestResult="MaxButton">
										<Viewbox Width="11" Margin="2">
											<Viewbox.RenderTransform>
												<RotateTransform Angle="-90" />
											</Viewbox.RenderTransform>
											<Path Name="RestoreButtonPath"
												  Stretch="UniformToFill"
												  Fill="{TemplateBinding Foreground}"
												  Data="M2048 2048v-2048h-2048v2048h2048zM1843 1843h-1638v-1638h1638v1638z"/>
										</Viewbox>
									</Button>
									<Button x:Name="PART_CloseButton"
											Background="#ffe81123"
											BorderBrush="#fff1707a"
											Theme="{StaticResource FluentCaptionButton}"
											AutomationProperties.Name="Close"
											Win32Properties.NonClientHitTestResult="Close">
										<Viewbox Width="11" Margin="2">
											<Path Stretch="UniformToFill"
												  Fill="{TemplateBinding Foreground}"
												  Data="M1169 1024l879 -879l-145 -145l-879 879l-879 -879l-145 145l879 879l-879 879l145 145l879 -879l879 879l145 -145z" />
										</Viewbox>
									</Button>
								</StackPanel>
							</ControlTemplate>
						</Setter>
						<Style Selector="^:maximized /template/ Path#RestoreButtonPath">
							<Setter Property="Data" Value="M2048 410h-410v-410h-1638v1638h410v410h1638v-1638zM1434 1434h-1229v-1229h1229v1229zM1843 1843h-1229v-205h1024v-1024h205v1229z" />
						</Style>
						<Style Selector="^:fullscreen /template/ Path#FullScreenButtonPath">
							<Setter Property="IsVisible" Value="True" />
							<Setter Property="Data" Value="M205 1024h819v-819h-205v469l-674 -674l-145 145l674 674h-469v205zM1374 1229h469v-205h-819v819h205v-469l674 674l145 -145z" />
						</Style>
						<Style Selector="^:fullscreen /template/ Button#PART_RestoreButton">
							<Setter Property="IsVisible" Value="False" />
						</Style>
						<Style Selector="^:fullscreen /template/ Button#PART_MinimizeButton">
							<Setter Property="IsVisible" Value="False" />
						</Style>
						<Style Selector="^ /template/ Button:disabled">
							<Setter Property="Opacity" Value="0.2"/>
						</Style>

					</ControlTheme>
				</ResourceDictionary>

				<ResourceDictionary>
					<ControlTheme x:Key="{x:Type MenuFlyoutPresenter}" TargetType="MenuFlyoutPresenter">
						<Setter Property="Background" Value="{DynamicResource MenuFlyoutPresenterBackground}" />
						<Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutPresenterBorderBrush}" />
						<Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}" />
						<Setter Property="Padding" Value="{DynamicResource MenuFlyoutPresenterThemePadding}" />
						<Setter Property="MaxWidth" Value="{DynamicResource FlyoutThemeMaxWidth}" />
						<Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
						<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
						<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
						<Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
						<Setter Property="Template">
							<ControlTemplate>
								<Border Name="LayoutRoot"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{DynamicResource FlyoutBorderThemePadding}"
										CornerRadius="{TemplateBinding CornerRadius}">
									<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  Theme="{StaticResource FluentMenuScrollViewer}"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<ItemsPresenter Name="PART_ItemsPresenter"
														ItemsPanel="{TemplateBinding ItemsPanel}"
														Margin="{DynamicResource MenuFlyoutScrollerMargin}"
														KeyboardNavigation.TabNavigation="Continue"
														Grid.IsSharedSizeScope="True" />
									</ScrollViewer>
								</Border>
							</ControlTemplate>
						</Setter>
					</ControlTheme>
					<ControlTheme x:Key="HorizontalMenuFlyoutPresenter" TargetType="MenuFlyoutPresenter"  BasedOn="{StaticResource {x:Type MenuFlyoutPresenter}}">
						<Setter Property="MinWidth" Value="{DynamicResource HorizontalMenuFlyoutThemeMinWidth}" />
						<Setter Property="ItemsPanel">
							<ItemsPanelTemplate>
								<StackPanel Orientation="Horizontal"/>
							</ItemsPanelTemplate>
						</Setter>
					</ControlTheme>
				</ResourceDictionary>

				<ResourceDictionary>
					<Thickness x:Key="FlyoutBorderThemeThickness">1</Thickness>
					<ControlTheme x:Key="{x:Type FlyoutPresenter}" TargetType="FlyoutPresenter">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Setter Property="VerticalContentAlignment" Value="Stretch" />
						<Setter Property="Background" Value="{DynamicResource FlyoutPresenterBackground}" />
						<Setter Property="BorderBrush" Value="{DynamicResource FlyoutBorderThemeBrush}" />
						<Setter Property="BorderThickness" Value="{DynamicResource FlyoutBorderThemeThickness}" />
						<Setter Property="Padding" Value="{DynamicResource FlyoutContentThemePadding}" />
						<Setter Property="MinWidth" Value="{DynamicResource FlyoutThemeMinWidth}" />
						<Setter Property="MaxWidth" Value="{DynamicResource FlyoutThemeMaxWidth}" />
						<Setter Property="MinHeight" Value="{DynamicResource FlyoutThemeMinHeight}" />
						<Setter Property="MaxHeight" Value="{DynamicResource FlyoutThemeMaxHeight}" />
						<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
						<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
						<Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
						<Setter Property="Template">
							<ControlTemplate>
								<Border Name="LayoutRoot"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{DynamicResource FlyoutBorderThemePadding}"
										CornerRadius="{TemplateBinding CornerRadius}">
									<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<ContentPresenter x:Name="PART_ContentPresenter"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  Margin="{TemplateBinding Padding}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														  HorizontalContentAlignment="Stretch"
														  VerticalContentAlignment="Stretch" />
									</ScrollViewer>
								</Border>
							</ControlTemplate>
						</Setter>
					</ControlTheme>
				</ResourceDictionary>

				<ResourceDictionary>
					<ControlTheme x:Key="{x:Type MenuFlyoutPresenter}" TargetType="MenuFlyoutPresenter">
						<Setter Property="Background" Value="{DynamicResource MenuFlyoutPresenterBackground}" />
						<Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutPresenterBorderBrush}" />
						<Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}" />
						<Setter Property="Padding" Value="{DynamicResource MenuFlyoutPresenterThemePadding}" />
						<Setter Property="MaxWidth" Value="{DynamicResource FlyoutThemeMaxWidth}" />
						<Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
						<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
						<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
						<Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
						<Setter Property="Template">
							<ControlTemplate>
								<Border Name="LayoutRoot"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{DynamicResource FlyoutBorderThemePadding}"
										CornerRadius="{TemplateBinding CornerRadius}">
									<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  Theme="{StaticResource FluentMenuScrollViewer}"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<ItemsPresenter Name="PART_ItemsPresenter"
														ItemsPanel="{TemplateBinding ItemsPanel}"
														Margin="{DynamicResource MenuFlyoutScrollerMargin}"
														KeyboardNavigation.TabNavigation="Continue"
														Grid.IsSharedSizeScope="True" />
									</ScrollViewer>
								</Border>
							</ControlTemplate>
						</Setter>
					</ControlTheme>
					<ControlTheme x:Key="HorizontalMenuFlyoutPresenter" TargetType="MenuFlyoutPresenter"  BasedOn="{StaticResource {x:Type MenuFlyoutPresenter}}">
						<Setter Property="MinWidth" Value="{DynamicResource HorizontalMenuFlyoutThemeMinWidth}" />
						<Setter Property="ItemsPanel">
							<ItemsPanelTemplate>
								<StackPanel Orientation="Horizontal"/>
							</ItemsPanelTemplate>
						</Setter>
					</ControlTheme>
				</ResourceDictionary>


				<ResourceDictionary>
					<x:Double x:Key="MenuFlyoutSubItemPopupHorizontalOffset">-4</x:Double>
					<Thickness x:Key="MenuIconPresenterMargin">0,0,12,0</Thickness>
					<Thickness x:Key="MenuInputGestureTextMargin">24,0,0,0</Thickness>
					<StreamGeometry x:Key="MenuItemChevronPathData">M 1,0 10,10 l -9,10 -1,-1 L 8,10 -0,1 Z</StreamGeometry>

					<!-- Added BasedOn="{StaticResource {x:Type MenuItem}}" -->
					<ControlTheme x:Key="{x:Type MenuItem}" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
						<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackground}" />
						<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForeground}" />
						<!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future. 
						<Setter Property="Padding" Value="{DynamicResource MenuFlyoutItemThemePaddingNarrow}" />-->
						<Setter Property="Padding" Value="6" />
						<Setter Property="CornerRadius" Value="4" />
						<Setter Property="Margin" Value="4,1,4,1" />
						<Setter Property="VerticalAlignment" Value="Stretch" />
						<Setter Property="Template">
							<ControlTemplate>
								<Panel VerticalAlignment="Stretch">
									<Border Name="PART_LayoutRoot"
											Padding="{TemplateBinding Padding}"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											CornerRadius="{TemplateBinding CornerRadius}"
											VerticalAlignment="Stretch">
										<Grid VerticalAlignment="Stretch">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="ToggleIcon" />
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="MenuItemIcon" />
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="MenuItemIGT" />
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="MenuItemChevron" />
											</Grid.ColumnDefinitions>

											<ContentControl Grid.Column="0"
															x:Name="PART_ToggleIconPresenter"
															IsVisible="False"
															Theme="{StaticResource FluentMenuItemIconTheme}"
															Margin="{DynamicResource MenuIconPresenterMargin}" />

											<ContentControl Grid.Column="1"
															x:Name="PART_IconPresenter"
															IsVisible="False"
															Theme="{StaticResource FluentMenuItemIconTheme}"
															Content="{TemplateBinding Icon}"
															Margin="{DynamicResource MenuIconPresenterMargin}" />

											<ContentPresenter Name="PART_HeaderPresenter"
															  Content="{TemplateBinding Header}"
															  ContentTemplate="{TemplateBinding HeaderTemplate}"
															  VerticalAlignment="Center"
															  HorizontalAlignment="Stretch"
															  RecognizesAccessKey="True"
															  Grid.Column="2"/>
											<TextBlock x:Name="PART_InputGestureText"
													   Grid.Column="3"
													   Margin="{DynamicResource MenuInputGestureTextMargin}"
													   Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
													   HorizontalAlignment="Right"
													   VerticalAlignment="Center"
													   Foreground="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"/>
											<Path Name="PART_ChevronPath"
												  Stretch="Uniform"
												  Width="8"
												  Height="16"
												  Data="{StaticResource MenuItemChevronPathData}"
												  Fill="{DynamicResource MenuFlyoutSubItemChevron}"
												  Margin="{DynamicResource MenuFlyoutItemChevronMargin}"
												  VerticalAlignment="Center"
												  Grid.Column="4" />
										</Grid>
									</Border>
									<Popup Name="PART_Popup"
										   WindowManagerAddShadowHint="False"
										   Placement="RightEdgeAlignedTop"
										   HorizontalOffset="{DynamicResource MenuFlyoutSubItemPopupHorizontalOffset}"
										   IsLightDismissEnabled="False"
										   IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}">
										<Border Background="{DynamicResource MenuFlyoutPresenterBackground}"
												BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
												BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
												Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
												MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
												MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
												HorizontalAlignment="Stretch"
												CornerRadius="{DynamicResource OverlayCornerRadius}">
											<ScrollViewer Theme="{StaticResource FluentMenuScrollViewer}">
												<ItemsPresenter Name="PART_ItemsPresenter"
																ItemsPanel="{TemplateBinding ItemsPanel}"
																Margin="{DynamicResource MenuFlyoutScrollerMargin}"
																Grid.IsSharedSizeScope="True" />
											</ScrollViewer>
										</Border>
									</Popup>
								</Panel>
							</ControlTemplate>
						</Setter>

						<Style Selector="^:icon /template/ ContentControl#PART_IconPresenter">
							<Setter Property="IsVisible" Value="True" />
						</Style>
						<Style Selector="^:selected">
							<Style Selector="^ /template/ Border#PART_LayoutRoot">
								<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPointerOver}" />
							</Style>
							<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
								<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
							</Style>
							<Style Selector="^ /template/ TextBlock#PART_InputGestureText">
								<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
							</Style>
							<Style Selector="^ /template/ Path#PART_ChevronPath">
								<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronPointerOver}" />
							</Style>
						</Style>

						<!--  Listen for PART_LayoutRoot:pointerover, so it will not be triggered when subitem is pressed  -->
						<Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
							<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPressed}" />
							<Style Selector="^ ContentPresenter#PART_HeaderPresenter">
								<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
							</Style>
							<Style Selector="^ TextBlock#PART_InputGestureText">
								<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
							</Style>
							<Style Selector="^ Path#PART_ChevronPath">
								<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronPressed}" />
							</Style>
						</Style>

						<Style Selector="^:disabled">
							<Style Selector="^ /template/ Border#PART_LayoutRoot">
								<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundDisabled}" />
							</Style>
							<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
								<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
							</Style>
							<Style Selector="^ /template/ TextBlock#PART_InputGestureText">
								<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
							</Style>
							<Style Selector="^ /template/ Path#PART_ChevronPath">
								<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronDisabled}" />
							</Style>
						</Style>

						<Style Selector="^:open /template/ Path#PART_ChevronPath">
							<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronSubMenuOpened}" />
						</Style>

						<Style Selector="^:empty /template/ Path#PART_ChevronPath">
							<Setter Property="IsVisible" Value="False" />
						</Style>

						<Style Selector="^:separator">
							<Setter Property="Template">
								<ControlTemplate>
									<Separator/>
								</ControlTemplate>
							</Setter>
						</Style>

						<Style Selector="^ /template/ Image#PART_ToggleIconImage">
							<Setter Property="IsVisible" Value="True" />
						</Style>

						<Style Selector="^:checked:toggle /template/ ContentControl#PART_ToggleIconPresenter">
							<Setter Property="IsVisible" Value="True" />
							<Setter Property="Content">
								<Template>
									<Path Fill="{Binding $parent[MenuItem].Foreground}"
										  Width="16"
										  Data="{StaticResource CheckMarkPathData}" />
								</Template>
							</Setter>
						</Style>
						<Style Selector="^:checked:radio /template/ ContentControl#PART_ToggleIconPresenter">
							<Setter Property="IsVisible" Value="True" />
							<Setter Property="Content">
								<Template>
									<Ellipse Fill="{Binding $parent[MenuItem].Foreground}"
											 Margin="4" Width="8" Height="8" />
								</Template>
							</Setter>
						</Style>
					</ControlTheme>
					<ControlTheme x:Key="HorizontalMenuItem" TargetType="MenuItem" BasedOn="{StaticResource FluentTopLevelMenuItem}">
						<Setter Property="Padding" Value="{DynamicResource HorizontalMenuFlyoutItemThemePaddingNarrow}" />
						<Setter Property="Margin" Value="{DynamicResource HorizontalMenuFlyoutItemMargin}" />
					</ControlTheme>

					<ControlTheme x:Key="FluentMenuItemIconTheme"
								  TargetType="ContentControl">
						<Setter Property="Width"
								Value="16" />
						<Setter Property="Height"
								Value="16" />
						<Setter Property="Template">
							<ControlTemplate>
								<Viewbox
								  StretchDirection="DownOnly"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center">
									<ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" />
								</Viewbox>
							</ControlTemplate>
						</Setter>
					</ControlTheme>
				</ResourceDictionary>

				<ResourceDictionary>
					<ControlTheme x:Key="{x:Type Separator}" TargetType="Separator" BasedOn="{StaticResource {x:Type Separator}}">
						<!-- <Setter Property="Height" Value="{DynamicResource MenuFlyoutSeparatorThemeHeight}" />  -->
						<Setter Property="Height" Value="0.5" />
						<Setter Property="Opacity" Value="0.5" />
					</ControlTheme>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>

		</ResourceDictionary>


	</Styles.Resources>
</Styles>
